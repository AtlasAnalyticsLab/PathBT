# CUDA_VISIBLE_DEVICES=0,1 python create_heatmaps.py --config config_template.yaml
--- 
exp_arguments:
  # number of classes
  n_classes: 5
  # name tag for saving generated figures and assets
  save_exp_code: HEATMAP_OUTPUT 
  # where to save raw asset files
  raw_save_dir: /home/huron/Documents/Clam/CLAM/heatmaps/pkgh-600/basicBT_raw_results
  # where to save final heatmaps
  production_save_dir: /home/huron/Documents/Clam/CLAM/heatmaps/pkgh-600/basicBT-heatmap_production_results
  batch_size: 256
data_arguments: 
  # where is data stored; can be a single str path or a dictionary of key, data_dir mapping
  data_dir: /home/huron/Documents/Datasets/KGH_WSIs/test
  # column name for key in data_dir (if a dict mapping is used)
  data_dir_key: source
  # csv list containing slide_ids (can additionally have seg/patch paramters, class labels, etc.)
  process_list: /home/huron/Documents/Clam/CLAM/heatmaps/KGH_slides_v2.csv
  # preset file for segmentation/patching
  preset: /home/huron/Documents/Clam/CLAM/presets/bwh_biopsy.csv
  # file extention for slides
  slide_ext: .tif
  # label dictionary for str: interger mapping (optional)
  label_dict:
    Normal: 0
    TA: 1    
    TVA: 2
    HP: 3
    SSL: 4                    
patching_arguments:
  # arguments for patching
  patch_size: 375
  overlap: 0
  patch_level: 1
  custom_downsample: 1
encoder_arguments:
  # arguments for the pretrained encoder model
  model_name: resnet50-basicBT-600 # currently support: resnet50_trunc, uni_v1, conch_v1
  target_img_size: 224 # resize images to this size before feeding to encoder
model_arguments: 
  # arguments for initializing model from checkpoint
  ckpt_path: /home/huron/Documents/Clam/CLAM/results/pkgh-600/rn50-pkgh600-basicBT_s1/s_0_checkpoint.pt
  model_type: clam_sb # see utils/eval_utils/
  initiate_fn: initiate_model # see utils/eval_utils/
  model_size: small
  drop_out: true
  embed_dim: 2048
heatmap_arguments:
  # downsample at which to visualize heatmap (-1 refers to downsample closest to 32x downsample)
  vis_level: 2
  # transparency for overlaying heatmap on background (0: background only, 1: foreground only)
  alpha: 0.4
  # whether to use a blank canvas instead of original slide
  blank_canvas: true
  # whether to also save the original H&E image
  save_orig: false
  # file extension for saving heatmap/original image
  save_ext: jpg
  # whether to calculate percentile scores in reference to the set of non-overlapping patches
  use_ref_scores: true
  # whether to use gaussian blur for further smoothing
  blur: false
  # whether to shift the 4 default corner points for checking if a patch is inside a foreground contour
  use_center_shift: true
  # whether to only compute heatmap for ROI specified by x1, x2, y1, y2
  use_roi: false 
  # whether to calculate heatmap with specified overlap (by default, coarse heatmap without overlap is always calculated)
  calc_heatmap: true
  # whether to binarize attention scores
  binarize: false
  # binarization threshold: (0, 1)
  binary_thresh: -1
  # factor for downscaling the heatmap before final dispaly
  custom_downsample: 1
  cmap: jet
sample_arguments:
  samples:
    - name: "topk_high_attention"
      sample: true
      seed: 1
      k: 15 # save top-k patches
      mode: topk



